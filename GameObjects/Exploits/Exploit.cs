using BadActor.GameObjects.Exploits;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace BadActor.GameObjects
{
    public class Exploit : GameObject<Exploit>
    {
        // out of 100, how much % of the exploit has been patched
        public int PatchProgress { get; private set; }

        // Do we need a separate parameter for the distribution of the patch?
        // Can we mark when we patched it and go from that 

        // Maybe we should just timestamp whenever it's patched, and
        // track its distribution

        // Maybe the more highly distributed the exploit is, the faster its patch is distributed

        public Exploitable Exploitable { get; private set; }
        // should we bother with exploittype?
        public override string Name
        {
            get
            {
                return Exploitable.Name;
            }
        }

        public Exploit(Exploitable exploitable)
        {
            Exploitable = exploitable;
        }
    }
}
