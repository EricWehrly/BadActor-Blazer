@inject AppState appState;

<style>
    #MachinesContainer h4 {
        text-decoration: dotted;
        text-decoration-line: underline;
    }
</style>

<div id="MachinesContainer">

    <h4>machines</h4>

    <MachineComponent machine="@Machine.Get("localhost")" />

    @foreach (Machine.ComputingPower computingPower in Enum.GetValues(typeof(Machine.ComputingPower)))
    {
        @if (Machine.MachineGroup(computingPower).Count > 0)
        {
            <MachineGroup ComputingPower="computingPower" Machines="Machine.MachineGroup(computingPower)" />
        }
    }
</div>

@code {

    public void RedrawNeeded(Type filter)
    {
        if (filter != null && !filter.Equals(typeof(Machine)))
        {
            return;
        }

        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        appState.RedrawNeeded += RedrawNeeded;
        appState.OnApplicationDraggedChanged += StateHasChanged;
    }
}
