@inherits BadActorBaseComponent;

<style>
    .virus.new {
        cursor: pointer;
    }
</style>

@if (Virus == null)
{
    <div class="@CSSClasses virus new" @onclick="@newVirus">
        <span class="mdi mdi-plus"> New</span>
    </div>
}
else
{
<div class="@CSSClasses virus">
    @if (Virus.Unlocked)
    {
        <div class="@Virus.Vector.Icon"> @Virus.Name</div>
    }
    else
    {
        <div>Writing <span class="@Virus.Vector.Icon"> @Virus.Name</span>...</div>
    }
    @if(Virus.InfectedMachines.Count > 0)
    {
        <div class="@Machine.TypeIcon"> @Virus.InfectedMachines.Count infected</div>
    }
    @if (Virus.Patched)
    {
        <div class="btn btn-info">Patched</div>
    }
</div>
}

@code {

    [Inject]
    IModalService modalService { get; set; }

    [Parameter]
    public Virus Virus { get; set; }

    private void newVirus()
    {
        modalService.Show<NewVirus>("Write New Virus");
    }

    public void RedrawNeeded(Type filter)
    {
        if (filter != null && !filter.Equals(typeof(Virus)))
        {
            return;
        }

        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        appState.RedrawNeeded += RedrawNeeded;
    }
}
