<style>
    #NewVirus .box {
        border: 1px dashed;
        border-color: var(--ba-border-color-light);
        display: inline-block;
        padding: 1em;
        transition: all ease-in-out .5s;
    }

        #NewVirus .box.selected {
            /*
            border: 1px solid;
                */
            box-shadow: 0 0 8px #9ecaed;
        }
</style>

<div id="NewVirus">
    Exploit
    <br />
    <br />
    <Carousel CarouselItems="@carouselExploits()" />
    <br />
    <hr />
    <br />
    Vector
    <br />
    <br />
    <Carousel CarouselItems="@carouselVectors()" SelectedItemChanged="@selectedVectorChanged"/>
    <br />
    <hr />
    <br />

    Distribution Channels for
    <br />
    <br />
    <span class="btn btn-info">&lt;</span>
    @foreach (ViralDistributor distributor in ViralDistributor.List)
    {
        <div class="box">@distributor.Name</div>
    }
    <span class="btn btn-info">&gt;</span>
    <br />
    <br />
    <button disabled=@disabled class="btn btn-outline-primary mdi mdi-clock"> Write @writeTime</button>
</div>

@code {
    private string writeTime => "30s";

    private bool disabled = true;

    private List<GameObjectBase> carouselExploits()
    {
        Console.WriteLine("Re-listing");
        // return Exploit.List;
        var resultList = new List<GameObjectBase>();
        foreach(Exploit exploit in Exploit.List)
        {
            resultList.Add(exploit);
        }

        return resultList;
    }

    private List<GameObjectBase> carouselVectors()
    {
        var resultList = new List<GameObjectBase>();
        foreach(ViralVector vector in ViralVector.List)
        {
            resultList.Add(vector);
        }

        return resultList;
    }

    private void selectedVectorChanged(GameObjectBase gameObject)
    {
        Console.WriteLine("Selected vector changed to " + gameObject.Name);
    }
}
