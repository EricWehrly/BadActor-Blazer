@inherits BadActorBaseComponent;

<div id="MachinesContainer">

    <h4 class="@Machine.TypeIcon"> machines</h4>

    <MachineComponent CSSClasses="horizontalListItem" machine="@Machine.Get("localhost")" />

    @foreach (ComputingPower computingPower in Enum.GetValues(typeof(ComputingPower)))
    {
        @if (Machine.MachineGroup(computingPower).Count > 0)
        {
            <MachineGroup CSSClasses="horizontalListItem" 
                          ComputingPower="computingPower" 
                          Machines="Machine.MachineGroup(computingPower)" />
        }
    }
</div>

@code {

    public void RedrawNeeded(Type filter)
    {
        if (filter != null && !filter.Equals(typeof(Machine)))
        {
            return;
        }

        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        appState.RedrawNeeded += RedrawNeeded;
        appState.OnApplicationDraggedChanged += StateHasChanged;
    }
}
