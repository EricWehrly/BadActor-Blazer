@inject AppState appState;

<style>
    #ApplicationsContainer {
        left: .5em;
        position: absolute;
        top: 50%;
        /* Translate up by 50%? */
    }

        #ApplicationsContainer h4 {
            cursor: pointer;
        }

        #ApplicationsContainer .application {
            padding: .5em;
            cursor: grab;
        }

    #ApplicationsContainer .application:active {
        cursor: grabbing;
    }

    #ApplicationsContainer > .btn {
        margin-bottom: 1em;
    }
</style>

<div id="ApplicationsContainer" class="green">
    <h4 class="green @appsMenuIcon" @onclick="ToggleMenu">
        @appsMenuName
    </h4>

    <div class="@MenuCssClass">
        @foreach (Application application in Application.List)
        {
            <div class="application" draggable="true"
                 @ondragstart="@(e => ApplicationDragStart(application))" @ondragend="@ApplicationDragEnd">
                <span class="@applicationClass"> @application.Name</span>
            </div>
        }
    </div>
</div>

@code {

    private string appsMenuName => collapseMenu ? "Apps" : "Applications";

    private string appsMenuIcon => collapseMenu ? "mdi mdi-application" : null;

    // We may later want to suppress the icon while we're dragging
    private string applicationClass = "mdi mdi-application";

    private bool collapseMenu = true;

    private string MenuCssClass => collapseMenu ? "collapse" : null;

    private void ToggleMenu()
    {
        collapseMenu = !collapseMenu;
    }

    private void ApplicationDragStart(Application application)
    {
        appState.ApplicationBeingDragged = application;
    }

    private void ApplicationDragEnd()
    {
        appState.ApplicationBeingDragged = null;
    }
}
